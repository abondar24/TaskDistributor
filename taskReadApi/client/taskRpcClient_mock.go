// Code generated by MockGen. DO NOT EDIT.
// Source: client/client.go

// Package client is a generated GoMock package.
package client

import (
	reflect "reflect"

	data "github.com/abondar24/TaskDistributor/taskData/data"
	rpc "github.com/abondar24/TaskDistributor/taskData/rpc"
	gomock "github.com/golang/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetTask mocks base method.
func (m *MockClient) GetTask(id *string) (*data.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTask", id)
	ret0, _ := ret[0].(*data.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTask indicates an expected call of GetTask.
func (mr *MockClientMockRecorder) GetTask(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTask", reflect.TypeOf((*MockClient)(nil).GetTask), id)
}

// GetTaskHistory mocks base method.
func (m *MockClient) GetTaskHistory(id *string) (*data.TaskHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskHistory", id)
	ret0, _ := ret[0].(*data.TaskHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskHistory indicates an expected call of GetTaskHistory.
func (mr *MockClientMockRecorder) GetTaskHistory(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskHistory", reflect.TypeOf((*MockClient)(nil).GetTaskHistory), id)
}

// GetTasksByStatus mocks base method.
func (m *MockClient) GetTasksByStatus(args *rpc.StatusArgs) (*[]*data.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTasksByStatus", args)
	ret0, _ := ret[0].(*[]*data.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTasksByStatus indicates an expected call of GetTasksByStatus.
func (mr *MockClientMockRecorder) GetTasksByStatus(args interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTasksByStatus", reflect.TypeOf((*MockClient)(nil).GetTasksByStatus), args)
}
