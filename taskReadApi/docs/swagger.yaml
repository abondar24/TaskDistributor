basePath: /
definitions:
  data.Task:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/data.TaskStatus'
      updatedAt:
        type: string
    type: object
  data.TaskHistory:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      statusHistory:
        items:
          $ref: '#/definitions/data.TaskStatusEntry'
        type: array
    type: object
  data.TaskStatus:
    enum:
    - created
    - updated
    - deleted
    - completed
    type: string
    x-enum-varnames:
    - TASK_CREATED
    - TASK_UPDATED
    - TASK_DELETED
    - TASK_COMPLETED
  data.TaskStatusEntry:
    properties:
      status:
        $ref: '#/definitions/data.TaskStatus'
      updated_at:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8082
info:
  contact:
    email: abondar24@yahoo.com
    name: Alex
  description: Task API to read tasks from store
  license:
    name: MIT
  termsOfService: http://swagger.io/terms/
  title: Task Read API
  version: "1.0"
paths:
  /task/{id}:
    get:
      description: Fetch task by id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task with latest status
          schema:
            $ref: '#/definitions/data.Task'
        "400":
          description: Wrong id param
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "502":
          description: Failed to read from store
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get task
      tags:
      - tasks
  /task/history/{id}:
    get:
      description: Fetch task status update history by id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task with status changes history
          schema:
            $ref: '#/definitions/data.TaskHistory'
        "400":
          description: Wrong id param
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "502":
          description: Failed to read from store
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get task history
      tags:
      - tasks
  /tasks/{status}:
    get:
      description: Fetch tasks by specific status with offset and limit
      parameters:
      - description: Task Status
        in: path
        name: status
        required: true
        type: string
      - description: Offset - from which task to fetch
        in: query
        name: offset
        required: true
        type: string
      - description: Limit - how many tasks to fetch
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tasks with specific status
          schema:
            items:
              $ref: '#/definitions/data.Task'
            type: array
        "400":
          description: Wrong path or query param
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "502":
          description: Failed to read from store
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get tasks by status
      tags:
      - tasks
swagger: "2.0"
